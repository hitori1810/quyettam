
({fieldTag:"input",events:{'change .existing':'updateExistingAddress','click .btn-edit':'updateExistingProperty','click .removeEmail':'remove','change .newEmail':'add'},add:function(){var newAddress=this.$('.newEmail').val(),existingAddresses=this.model.get(this.name)||[];var newObj={email_address:newAddress};if(existingAddresses.length<1){newObj.primary_address=true;}
existingAddresses.push(newObj);this.model.set(this.name,existingAddresses);this.$('.newEmail').removeClass('newEmail');this.render();},remove:function(evt){if(evt){var emailAddress=$(evt.target).data('parentemail')||$(evt.target).parent().data('parentemail'),existingAddresses=this.model.get(this.name);_.each(existingAddresses,function(emailInfo,index){if(emailInfo.email_address==emailAddress){existingAddresses[index]=false;}});this.model.set(this.name,_.compact(existingAddresses));this.$('[data-emailaddress="'+emailAddress+'"]').remove();}},updateExistingProperty:function(evt){var existingAddresses,emailAddress,parent,target,property;evt.stopPropagation();evt.preventDefault();target=$(evt.target);parent=target.parent();emailAddress=parent.data('parentemail')||parent.parent().data('parentemail');property=$(evt.target).data('emailproperty')||parent.data('emailproperty');existingAddresses=this.model.get(this.name);if(property=='primary_address'){existingAddresses=this.massUpdateProperty(existingAddresses,property,"0");this.$('.is_primary').removeClass('active');}
$(target).toggleClass('active');$(parent).toggleClass('active');_.each(existingAddresses,function(emailInfo,index){if(emailInfo.email_address==emailAddress){if(existingAddresses[index][property]=="1"){existingAddresses[index][property]="0";}else{existingAddresses[index][property]="1";}}});},massUpdateProperty:function(emails,propName,value){_.each(emails,function(emailInfo,index){emails[index][propName]=value;})
return emails;},updateExistingAddress:function(evt){if($(evt.target).val()!=$(evt.target).attr('id')){var oldEmail=$(evt.target).attr('id');var newEmail=$(evt.target).val();var existingEmails=this.model.get(this.name);_.each(existingEmails,function(emailInfo,index){if(emailInfo.email_address==oldEmail){existingEmails[index].email_address=newEmail;}});this.render();}},bindDomChange:function(){if(this.$el.find(this.fieldTag).length===1&&this.$el.find(this.fieldTag).hasClass('textField')){app.view.Field.prototype.bindDomChange.call(this);}else{function bindAll(sel){this.$(sel).each(function(index){$(this).tooltip({placement:"bottom"});});}
bindAll('.btn-edit');bindAll('.addEmail');bindAll('.removeEmail');this.delegateEvents();}}})